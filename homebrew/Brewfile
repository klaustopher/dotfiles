# frozen_string_literal: true

CRATE_FILE = "#{Dir.home}/.selected-homebrew-crates"
CRATES = (File.exist?(CRATE_FILE) ? File.read(CRATE_FILE) : '').split(',').inspect

# Install fonts so that everything looks amazing
cask 'font-fantasque-sans-mono'
cask 'font-fantasque-sans-mono-nerd-font'

# 1password
tap '1password/tap'
cask '1password-cli'
cask '1password'
# mas '1Password for Safari', id: 1_569_813_296

# Other Taps
tap 'homebrew/services'

# Install a bunch of packages
# TODO: Add some grouping
brew 'zstd'
brew 'llvm'
brew 'aria2'
brew 'autoconf'
brew 'automake'
brew 'coreutils'
brew 'pkg-config'
brew 'direnv'
brew 'libsodium'
brew 'harfbuzz'
brew 'libksba'
brew 'gnupg'
brew 'libtool'
brew 'gdal'
brew 'gobject-introspection'
brew 'htop'
brew 'libffi'
brew 'imagemagick'
brew 'jq'
brew 'libressl'
brew 'lima'
brew 'lsusb'
brew 'mas'
brew 'zlib'
brew 'nmap'
brew 'tmux'
brew 'overmind'
brew 'poppler-qt5'
brew 'pwgen'
brew 'rsync'
brew 'ssh-copy-id'
brew 'terminal-notifier'
brew 'tig'
brew 'tree'
brew 'watchman'
brew 'wget'
brew 'bat'

# Media tools
brew 'yt-dlp'
if CRATES.include?('Video Encoding')
  brew 'ffmpeg'
  brew 'gstreamer'
end

# Git tools
brew 'gh'
brew 'git'
brew 'git-crypt'
brew 'gitui'

# Network utilities
brew 'ipcalc'
brew 'speedtest-cli'

# Fish Shell
if CRATES.include?('Fish Shell')
  brew 'fish', args: ['HEAD'] # until V4 is released
end

# ZSH and plugins
brew 'zsh'
brew 'zplug'

# Editors
brew 'neovim'
brew 'rg'
brew 'fd'
brew 'fzf'
brew 'lazygit'
cask 'neovide'
cask 'zed'

# Programming languages
if CRATES.include?('Crystal')
  brew 'crystal'
  brew 'crystalline'
end

brew 'nvm' if CRATES.include?('Node')

if CRATES.include?('Ruby')
  brew 'rbenv'
  brew 'ruby-build'

  # Build dependencies for Ruby
  brew 'openssl@3'
  brew 'readline'
  brew 'libyaml'
  brew 'gmp'
end

# Database tools for development
brew 'redis', restart_service: true if CRATES.include?('Redis')

if CRATES.include?('MySQL')
  brew 'mysql', restart_service: true
  # mas 'Sequel Ace', id: 1_518_036_000
end

brew 'sqlfluff'
brew 'sqldiff'

if CRATES.include?('PostgreSQL')
  brew 'geos'
  brew 'proj'
  # when updating the version, make sure to also replace the path in homebrew/path.zsh
  brew 'postgresql@17', restart_service: true
  brew 'postgis'
  cask 'postico'
end

# Postgres TimescaleDB
brew 'timescale/tap/timescaledb' if CRATES.include?('TimescaleDB')

cask 'db-browser-for-sqlite' if CRATES.include?('SQLite')

# GUI Apps
cask 'tidal'
cask 'vlc'

# let's see which terminal survives
cask 'iterm2'
cask 'ghostty'
cask 'Alfred'
cask 'istat-menus'
cask 'forklift'
cask 'dash'
cask 'firefox'
cask 'textmate'

cask 'gpg-suite' if MacOS.version <= :sequoia
brew 'pinentry-mac'

if CRATES.include?('Desk Setup')
  cask 'displaylink'
  cask 'ankerwork'
  cask 'elgato-stream-deck'
end

if CRATES.include?('Private Communication')
  cask 'threema@beta'
  cask 'whatsapp'
  cask 'signal'
end

# Mac App Store Applications
mas 'Apple Configurator', id: 1_037_126_344
mas 'Dato', id: 1_470_584_107
mas 'GIPHY CAPTURE', id: 668_208_984
mas 'Tailscale', id: 1_475_387_142 if CRATES.include?('Home Network Connection')
mas 'Monosnap', id: 540_348_655
mas 'DWD WarnWetter', id: 986_420_993

# mas "AusweisApp", id: 948660805

# we're in beta, so we must use the beta version of Xcode
mas 'Xcode', id: 497_799_835 if MacOS.version < :tahoe

# Apps have been removed from the store
# mas "Skitch", id: 425955336
# mas "ForkLift", id: 412448059
# mas "Marked", id: 448925439

# VS Code extensions
if CRATES.include?('VSCode')
  cask 'visual-studio-code'
  vscode 'crystal-lang-tools.crystal-lang'
  vscode 'cschlosser.doxdocgen'
  vscode 'dbaeumer.vscode-eslint'
  vscode 'github.vscode-github-actions'
  vscode 'itarato.byesig'
  vscode 'karunamurti.haml'
  vscode 'koichisasada.vscode-rdbg'
  vscode 'matthewmcgarvey.crystal-spec-vscode'
  vscode 'ms-azuretools.vscode-docker'
  vscode 'ms-ceintl.vscode-language-pack-de'
  vscode 'ms-vscode-remote.remote-containers'
  vscode 'ms-vscode-remote.remote-ssh'
  vscode 'ms-vscode-remote.remote-wsl'
  vscode 'ms-vscode.cmake-tools'
  vscode 'ms-vscode.remote-explorer'
  vscode 'ms-vscode.theme-tomorrowkit'
  vscode 'pkief.material-icon-theme'
  vscode 'redhat.vscode-yaml'
  vscode 'shopify.ruby-extensions-pack'
  vscode 'shopify.ruby-lsp'
  vscode 'sorbet.sorbet-vscode-extension'
  vscode 'tamasfe.even-better-toml'
  vscode 'twxs.cmake'
  vscode 'vscodevim.vim'
end
